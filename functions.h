#define FUNCTIONS_H

void numberfun();
void easiest();
void humancannonball2();
void symmetricorder();
void thelastproblem();
void tornbygge();
void fiftyshades();
void jobexpenses();
void nodup();
void grading();
void ladder();
int starbattles1();
void simplicity();
void simon();
void triangle();
void santaklas();
int sanic();
int rhyming();
int goodmorning();
int sretan();
int thanos();
int variablenames();
int ninetynine();
int comm();
int skocimis();
int skener();
int sevenwonders();
int securedoors();
int rectanglearea();
int racingalphabet();
int prsteni();
int lostlineup();
int mixedfractions();
int kornislav();
int meowth();
int helpaphd();
int heirsdilemma();
int harshad();
int hangman();
int circle();
int eligibility();
int drunkvigenere();
int janitor();
int sortofsorting();
int skyisland();
int semafori();
int savingdaylight();
int rle();
int voting();
int popular();
int polynomial();
int peragram();
int parking();
int peanuts();
int okviri();
int okvir();
int oktalni();
int nothanks();
int mrcodeformatgrader();
int kafkaesque();
int imperial();
int growlinggears();
int greedilyincreasingsubsequence();
int q1();
int q2();
int q3();
int q4();
int q5();
int q6();
int q7();
int q8();
int doubles();
int square();
int boolean();
int ascii();